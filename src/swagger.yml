
swagger: '2.0'
info:
  title: Review API
  version: "1.0.0"
  description: Review REST API documentation
host: localhost:8080
basePath: /api
schemes:
  - http
produces:
  - application/json
paths:
  /products:
    get:
      description:
        To list products
      tags:
        - Products
      parameters:
        - name: page
          in: query
          description: Page value.
          required: false
          type: number
          default: 0
        - name: size
          in: query
          description: Size of page.
          required: false
          type: number
          default: 10
      responses:
        200:
          description: A list of products returns
          schema:
            $ref: '#/definitions/ProductsListResponse'
        400:
          description: Request is invalid
        500:
          description: Internal server error.
  /products/{id}:
    put:
      tags:
        - Products
      description: Update a product's state, e.g., make it visible ,...
      parameters:
        - name: id
          in: path
          type: string
          required: true
          description: id of specific product
        - name: body
          in: body
          required: true
          description: body of edit request.
          schema:
            $ref: "#/definitions/EditProduct"
      responses:
        204:
          description: The operation was successful.
        400:
          description: Bad request, id is invalid.
        404:
          description: Requested object not found.
        500:
          description: Internal server error.
  /comments:
    get:
      description:
        To list comments
      tags:
        - Comment
      parameters:
        - name: page
          in: query
          description: Page value.
          required: false
          type: number
          default: 0
        - name: size
          in: query
          description: Size of page.
          required: false
          type: number
          default: 10
      responses:
        200:
          description: A paged list of comments returns
          schema:
            $ref: '#/definitions/CommentsListResponse'
        400:
          description: Bad request, id is invalid.
        404:
          description: Requested object not found.
        500:
          description: Internal server error.
    post:
      description:
        To ceate a new comments
      tags:
        - Comment
      parameters:
        - name: body
          in: body
          required: true
          description: New comment payload
          schema:
            $ref: "#/definitions/NewComment"
      responses:
        204:
          description: The operation was successful.
        400:
          description: Bad request, id is invalid.
        404:
          description: Requested object not found.
        500:
          description: Internal server error.

  /comments/{id}:
    put:
      tags:
        - Comment
      description: Update a comment's state, e.g., to reject or verify it.
      parameters:
        - name: id
          in: path
          type: string
          required: true
          description: id of specific comment
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Decision"
      responses:
        204:
          description: The operation was successful.
        400:
          description: Bad request, id is invalid.
        404:
          description: Requested object not found.
        500:
          description: Internal server error.
  /rates:
    get:
      description:
        To list rates
      tags:
        - Rate
      parameters:
        - name: page
          in: query
          description: Page value.
          required: false
          type: number
          default: 0
        - name: size
          in: query
          description: Size of page.
          required: false
          type: number
          default: 10
      responses:
        200:
          description: A list of rates returns
          schema:
            $ref: '#/definitions/RatesListResponse'
        404:
          description: Requested object not found.
        500:
          description: Internal server error.
    post:
      description:
        To rate a product
      tags:
        - Rate
      parameters:
        - name: body
          in: body
          required: true
          description: New rate payload
          schema:
            $ref: "#/definitions/NewRate"
      responses:
        204:
          description: The operation was successful.
        400:
          description: Bad request, id is invalid.
        404:
          description: Requested object not found.
        500:
          description: Internal server error.

  /rates/{id}:
    put:
      tags:
        - Rate
      description: Update a rates's state, e.g., to reject or verify it.
      parameters:
        - name: id
          in: path
          type: string
          required: true
          description: id of specific rate
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Decision"
      responses:
        204:
          description: The operation was successful.
        400:
          description: Bad request, id is invalid.
        404:
          description: Requested object not found.
        500:
          description: Internal server error.

definitions:
  ProductsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/ProductsList'

  ProductsList:
    type: object
    properties:
      id:
        type: number
        description: Identifier of the product.
      name:
        type: string
        description: Name of the product.
      is_visible:
        type: boolean
        description: Either if this product is visible to the users.
      is_commentable:
        type: boolean
        description: Either if this product is commentable to the users.
      is_commentable_to_pulic:
        type: boolean
        description: Indicates if this product is commentable to public or only the previous buyers can comment on.
      is_ratable:
        type: boolean
        description: Either if this product is ratable to the users.
      is_ratable_to_pulic:
        type: boolean
        description: Indicates if this product is ratable to public or only the previous buyers can rate on.

  EditProduct:
    type: object
    properties:
      is_visible:
        type: boolean
        description: Either if this product is visible to the users.
      is_commentable:
        type: boolean
        description: Either if this product is commentable to the users.
      is_commentable_to_pulic:
        type: boolean
        description: Indicates if this product is commentable to public or only the previous buyers can comment on.
      is_ratable:
        type: boolean
        description: Either if this product is ratable to the users.
      is_ratable_to_pulic:
        type: boolean
        description: Indicates if this product is ratable to public or only the previous buyers can rate on.

  CommentsListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/CommentsList'

  CommentsList:
    type: object
    properties:
      id:
        type: integer
      content:
        type: string
      status:
        enum:
          - VERIFIED
          - PENDING
          - REJECTED
      date:
        type: integer
        description: The date in EPOCH representation

  NewComment:
    type: object
    description: New Comment payload
    properties:
      user_id:
        type: integer
        description: The principal user id
      product_id:
        type: integer
        description: The product identifier which the user is commenting one
      content:
        type: string
      is_buyer:
        type: boolean
        description: Either the principal had previously bought this product

  Decision:
    type: object
    properties:
      decision:
        enum:
          - VERIFIED
          - REJECTED

  RatesListResponse:
    type: object
    properties:
      data:
        type: array
        items:
          $ref: '#/definitions/RatesList'

  RatesList:
    type: object
    properties:
      id:
        type: integer
      rate:
        type: integer
        description: The rate value ranging from 1 to 5
      status:
        enum:
          - VERIFIED
          - PENDING
          - REJECTED
      date:
        type: integer
        description: The date in EPOCH representation

  newRate:
    type: object
    description: New rate payload
    properties:
      user_id:
        type: integer
        description: The principal user id
      product_id:
        type: integer
        description: The product identifier which the user is rating on
      rate:
        type: integer
      is_buyer:
        type: boolean
        description: Either the principal had previously bought this product